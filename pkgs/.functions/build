# Package build helpers
#
# Author: Marco Elver <me AT marcoelver.com>

version=0

##
# build_set_flags command args...
# Wraps command and sets LDFLAGS to reflect environment variables set by pkgix,
# as some linkers do not use LD_RUN_PATH nor LIBRARY_PATH, or they get reset
# somewhere along the way (makefiles, configure scripts, etc.).
#
build_wrap_ldflags() {
	local library_path
	local ldflags
	local path

	IFS=: read -ra library_path <<< "$LIBRARY_PATH"
	for path in "${library_path[@]}"; do
		ldflags+="-L${path} "
	done

	LDFLAGS="${ldflags}-Wl,-rpath=${LD_RUN_PATH} ${LDFLAGS:-}" "$@"
}


: ${HACKAGE_URL:="http://hdiff.luite.com"}
fetch_hackage() {
	local _name="$1"
	local _version="$2"
	local _checksum="$3"
	fetch_extract \
		"${HACKAGE_URL}/packages/archive/${_name}/${_version}/${_name}-${_version}.tar.gz" \
		"$_checksum"
}

haskell_patch_register() {
	sed -i -r -e "s|'--global' ||" register.sh
	sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" -e "s|'--global' ||" unregister.sh
}

if (( ${PKGIX_PARALLEL_BUILD:-0} )); then
	_make="$(which make)"
	make() {
		$_make -j $(nproc) "$@"
	}
fi

# vim: set ft=sh :
