
source_pkg ".functions/build" "${repo}"

version=4.7.3
description="The GCC compiler"
depends=('dev/gmp-5' 'dev/mpfr-3' 'dev/libmpc' 'dev/ppl')
website="http://gcc.gnu.org/"
license=('GPL' 'LGPL' 'FDL' 'custom')
forceinstall=('usr/share/info/dir')
_languages="c,c++,fortran"

isinstalled() {
	gcc --version | grep -q " $version " &> /dev/null
}

iscompat() {
	return 0
}

build() {
	fetch_extract \
		"ftp://gcc.gnu.org/pub/gcc/releases/gcc-${version}/gcc-${version}.tar.bz2" \
		"2f7c37eb4fc14422ff2358a9ef59c974a75ab41204ef0e49fc34ab1d8981a9c3"

	cd "gcc-${version}"

	# Only apply pure64 patch, if system we are running on is pure
	if [[ ! -d "/usr/lib64" && "$architecture" == "x86_64" ]]; then
		fetch \
			"${repo}/../support/patches/dev/gcc42_pure64.patch" \
			"2d369cf93c6e15c3559c3560bce581e0ae5f1f34dc86bca013ac67ef1c1a9ff9"

		patch -Np1 -i gcc42_pure64.patch
	fi

	fetch \
		"${repo}/../support/patches/dev/gcc-4.7-texinfo.patch" \
		"9b3972a37046027189fb412cfd193711b0831b3ff4d5247e2a2481c776f4a8d6"

	patch -Np1 -i gcc-4.7-texinfo.patch

	# Do not install libiberty
	sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in

	# Do not run fixincludes
	sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

	build_wrap_ldflags ./configure --prefix="${prefix}/usr" \
		--libdir="${prefix}/usr/lib" --libexecdir="${prefix}/usr/lib" \
		--mandir="${prefix}/usr/share/man" --infodir="${prefix}/usr/share/info" \
		--enable-languages="${_languages}" \
		--enable-shared --enable-threads=posix \
		--with-system-zlib --enable-__cxa_atexit \
		--disable-libunwind-exceptions --enable-clocale=gnu \
		--disable-libstdcxx-pch --enable-libstdcxx-time \
		--enable-gnu-unique-object --enable-linker-build-id \
		--with-ppl --enable-cloog-backend=isl \
		--disable-ppl-version-check --disable-cloog-version-check \
		--enable-lto --enable-gold --enable-ld=default \
		--enable-plugin --with-plugin-ld=ld.gold \
		--with-linker-hash-style=gnu \
		--disable-multilib --disable-libssp \
		--disable-build-with-cxx --disable-build-poststage1-with-cxx \
		--enable-checking=release

	make
}

installenv() {
	cd "gcc-${version}"

	make -j1 DESTDIR="${destdir}" install
	ln -s gcc "${destdir}/${prefix}/usr/bin/cc"
}

# vim: set ft=sh :
